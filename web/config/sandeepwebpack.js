function FileListPlugin(options) {}

FileListPlugin.prototype.apply = function(compiler) {
  compiler.plugin('emit', function(compilation, callback) {
    // Create a header string for the generated file:
    var filelist = 'Files In this build :\n\n';

    // Loop through all compiled assets,
    // adding a new line item for each filename.
    for (var filename in compilation.assets) {
      filelist += ('- '+ filename +'\n');
    }
	filelist  +=" file path \n ";
	// Explore each chunk (build output):
	if (compilation.chunks){
		compilation.chunks.forEach(function(chunk) {
      // Explore each module within the chunk (built inputs):
	  if (chunk.modules){
				chunk.modules.forEach(function(module) {
					if(module.fileDependencies){
						// Explore each source file path that was included into the module:
						module.fileDependencies.forEach(function(filepath) {
						  filelist += ('- '+ filepath +'\n');
						});
					}
			
		  });
	  }
	if (chunk.files){
      // Explore each asset filename generated by the chunk:
      chunk.files.forEach(function(filename) {
        // Get the asset source for each file generated by the chunk:
		 filelist += ('- '+ filename +'\n');
        var source = compilation.assets[filename].source();
      });
	  }
    
    });
	}
    
    
    // Insert this list into the Webpack build as a new file asset:
    compilation.assets['filelist.md'] = {
      source: function() {
		  console.log("Done with filelist.md ##########################################..."+filelist.length);
        return filelist;
      },
      size: function() {
        return filelist.length;
      }
    };

    callback();
  });
};

module.exports = FileListPlugin;